#!/usr/bin/env node

// 모듈 사용
var app = require('../app');
var debug = require('debug')('project-toil:server');
var http = require('http');



var port = normalizePort(process.env.PORT || '3000');
app.set('port', port); // 포트 설정



var server = http.createServer(app); // http 서버 생성



server.listen(port);
server.on('error', onError);
server.on('listening', onListening); // 제공된 포트 이용


// 포트 값 확인 후 일반화
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}


// 오류 처리 함수
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // 에러 처리
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}


// 포트 읽어오는지 확인
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
